<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cc.oem.modules.agent.dao.agentSettings.GoodsMapper">

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        product_id,id, agent_id, agent_name, name, category, type, unit_price, specifications, price, min_pay_amount, sort, remark, version, create_time, update_time
    </sql>

    <select id="getGoodsById" resultType="com.cc.oem.modules.agent.entity.agentSettings.Goods">
        select
        <include refid="Base_Column_List"/>
        from goods where id = #{id}
    </select>

    <select id="getGoodsPageList" resultType="com.cc.oem.modules.agent.entity.agentSettings.Goods">
        select
        <include refid="Base_Column_List"/>
        from goods
        <where>
            <if test="param.agentName != null and param.agentName != ''">
                and agent_name like concat('%', #{param.agentName}, '%')
            </if>
            <if test="param.category != null">
                and category = #{param.category}
            </if>
            <if test="param.agentId != null">
                and agent_id = #{param.agentId}
            </if>
        </where>
    </select>

    <select id="getGoodsPageByAgentId" resultType="com.cc.oem.modules.agent.entity.agentSettings.Goods">
        select * from goods
        where agent_id = #{agentId} and category = #{category}
    </select>


    <select id="listAgentGoods" resultType="java.util.Map">
        select id,name from goods where agent_id = #{agentId}
    </select>

    <insert id="insert">
        insert into goods(id, agent_id, agent_name, name, type, unit_price, specifications, price, min_pay_amount, sort,
        remark, version, create_time, update_time, category, product_id)
        values(#{id}, #{agentId},#{agentName}, #{name}, #{type}, #{unitPrice}, #{specifications}, #{price}, #{minPayAmount}, #{sort},
        #{remark}, #{version}, now(), now(), #{category}, #{productId})
    </insert>

    <update id="updateByPrimaryKey">
        update goods
        set name=#{name}, type=#{type}, unit_price=#{unitPrice}, specifications=#{specifications}, price=#{price}, min_pay_amount=#{minPayAmount}, sort=#{sort},
        remark=#{remark},update_time = now(), category=#{category}, product_id=#{productId}
        where id = #{id}
    </update>


    <delete id="deleteByPrimaryKey">
        delete from goods where id = #{id}
    </delete>
</mapper>
