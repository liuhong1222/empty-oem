<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cc.oem.modules.agent.dao.AgentRechargeMapper">
    <sql id="Base_Column_List">
    id, agent_id, agent_level, name, phone, order_no, price, recharge_number, payment_amount, pay_type, remark, version, create_time, update_time, category, status
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="com.cc.oem.modules.agent.entity.AgentRecharge">
        select
        <include refid="Base_Column_List"/>
        from agent_recharge
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from agent_recharge
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insertSelective" parameterType="com.cc.oem.modules.agent.entity.AgentRecharge" useGeneratedKeys="true" keyProperty="id">
        insert into agent_recharge
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="agentId != null">
                agent_id,
            </if>
            <if test="agentLevel != null">
                agent_level,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="rechargeNumber != null">
                recharge_number,
            </if>
            <if test="paymentAmount != null">
                payment_amount,
            </if>
            <if test="payType != null">
                pay_type,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="category != null">
                category,
            </if>
            <if test="status != null">
                status
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="agentId != null">
                #{agentId,jdbcType=BIGINT},
            </if>
            <if test="agentLevel != null">
                #{agentLevel,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="rechargeNumber != null">
                #{rechargeNumber,jdbcType=INTEGER},
            </if>
            <if test="paymentAmount != null">
                #{paymentAmount,jdbcType=INTEGER},
            </if>
            <if test="payType != null">
                #{payType,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="category != null">
                #{category,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER}
            </if>
        </trim>
    </insert>


    <update id="updateByPrimaryKeySelective" parameterType="com.cc.oem.modules.agent.entity.AgentRecharge">
        update agent_recharge
        <set>
            <if test="agentId != null">
                agent_id = #{agentId,jdbcType=BIGINT},
            </if>
            <if test="productId != null">
                product_id = #{productId,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="tradeNo != null">
                trade_no = #{tradeNo,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="number != null">
                recharge_number = #{number,jdbcType=BIGINT},
            </if>
            <if test="money != null">
                payment_amount = #{money,jdbcType=DECIMAL},
            </if>
            <if test="payType != null">
                pay_type = #{payType,jdbcType=TINYINT},
            </if>
            <if test="payTime != null">
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="roleType != null">
                role_type = #{roleType,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cc.oem.modules.agent.entity.AgentRecharge">
    update agent_recharge
    set agent_id = #{agentId,jdbcType=BIGINT},
      product_id = #{productId,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      price = #{price,jdbcType=DECIMAL},
      recharge_number = #{number,jdbcType=BIGINT},
      payment_amount = #{money,jdbcType=DECIMAL},
      pay_type = #{payType,jdbcType=TINYINT},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      role_type = #{roleType,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <!--  -->
    <select id="queryAgentRechargeTotalDataList" parameterType="HashMap"
            resultType="com.cc.oem.modules.agent.model.data.AgentRechargeTotalData">
        select agent_id as agentId,empty_balance,empty_recharge_money,empty_recharge_number,
               realtime_balance,realtime_recharge_money,realtime_recharge_number,
               ifnull(international_balance,0) international_balance,ifnull(international_recharge_money,0) international_recharge_money
               ,ifnull(international_recharge_number,0) international_recharge_number,
               
               ifnull(direct_common_balance,0) direct_common_balance,ifnull(direct_common_recharge_money,0) direct_common_recharge_money
               ,ifnull(direct_common_recharge_number,0) direct_common_recharge_number,
               ifnull(line_direct_balance,0) line_direct_balance,ifnull(line_direct_recharge_money,0) line_direct_recharge_money
               ,ifnull(line_direct_recharge_number,0) line_direct_recharge_number
        from agent_account
        where agent_id in (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </select>

    <select id="queryFinanceAgentRechargeDataList"
            parameterType="com.cc.oem.modules.agent.model.param.FinanceRechargeParam"
            resultType="com.cc.oem.modules.agent.model.data.FinanceAgentRechargeData">
        select ag.id as agentId,ag.company_name as companyName ,od.category,
        case when od.category = 0 then ag.agent_level 
              when od.category = 1 then ag.real_level 
               when od.category = 2 then ag.international_level 
                when od.category = 4 then ag.direct_common_level 
                 when od.category = 5 then ag.line_direct_level else '' end as levelName,
        od.create_time as payTime,od.pay_type as payType,od.price,od.recharge_number number,od.payment_amount money,
        od.order_no as orderNo, od.id as orderId , concat(SUBSTR(ag.linkman_phone,1,3),'****',SUBSTR(ag.linkman_phone,8,4)) as agentMobile
        from agent as ag
        INNER JOIN agent_recharge as od on ag.id=od.agent_id and od.`status` = 1
        <where>
            <if test="companyName != null and companyName !=''">
                and ag.company_name like concat('%',#{companyName},'%')
            </if>
            <if test="agentId!=null and agentId!=''">
                ag.id = #{agentId}
            </if>
            <if test="payType != null">
                and od.pay_type= #{payType}
            </if>
            <if test="category != null">
                and od.category= #{category}
            </if>
            <if test="startTime != null and startTime !=''">
                and od.create_time &gt;= #{startTime}
            </if>
            <if test="endTime != null and endTime !=''">
                and od.create_time &lt;= #{endTime}
            </if>
            <if test="agentMobile!=null and  agentMobile!=''">
                and ag.linkman_phone like concat('%',#{agentMobile},'%')
            </if>
        </where>
        order by od.create_time desc
    </select>

    <select id="sumMoney" resultType="java.math.BigDecimal">
    SELECT
    sum(t1.payment_amount)
    FROM
    agent_recharge t1
  </select>

    <select id="sumNumber" resultType="java.lang.Long">
    SELECT
    sum(t1.recharge_number)
    FROM
    agent_recharge t1
  </select>

    <select id="findOrderByOrderNoAndStatus" parameterType="HashMap" resultType="com.cc.oem.modules.agent.entity.AgentRecharge">
        select
        <include refid="Base_Column_List"/>
        from agent_recharge
        where order_no = #{orderNo}
        and status=#{status}
    </select>


    <update id="updateByIdAndVersionSelective"
            parameterType="com.cc.oem.modules.agent.entity.AgentRecharge">
        update agent_recharge
        <set>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            update_time = now(),
            version=version+1
        </set>
        where id = #{id,jdbcType=BIGINT}
        and version = #{version,jdbcType=INTEGER}
    </update>

    <select id="findOrderByOrderNo" parameterType="HashMap" resultType="com.cc.oem.modules.agent.entity.AgentRecharge">
        select
        <include refid="Base_Column_List"/>
        from agent_recharge
        where order_no = #{orderNo}
    </select>

    <select id="calcuHistoryAgentInfo" resultType="com.cc.oem.modules.agent.entity.AgentAccount">
        select agent_id, sum(case when category = 0 then recharge_number else 0 end) emptyBalance,
        sum(case when category = 1 then recharge_number else 0 end) realtimeBalance,
        sum(case when category = 0 then convert(payment_amount, decimal(10,2)) else 0 end) emptyRechargeMoney,
        sum(case when category = 1 then convert(payment_amount, decimal(10,2)) else 0 end) realtimeRechargeMoney,
        sum(case when category = 0 then recharge_number else 0 end) realRechargeNum,sum(recharge_number) recharge_total
        from agent_recharge
        where
        <![CDATA[create_time >=#{startTime} and create_time<=#{endTime}]]>
        group by agent_id
    </select>

    <select id="getTotalRechargeInfo" resultType="com.cc.oem.modules.agent.model.data.records.AgentRechargeData">
        select sum(recharge_number) rechargeNumber,sum(payment_amount) paymentAmount
   from agent as ag
    INNER JOIN agent_recharge as od on ag.id=od.agent_id and od.`status` = 1
    <where>
        <if test="companyName != null and companyName !=''">
            and ag.company_name like concat('%',#{companyName},'%')
        </if>
        <if test="agentId!=null and agentId!=''">
            ag.id = #{agentId}
        </if>
        <if test="payType != null">
            and od.pay_type= #{payType}
        </if>
        <if test="category != null">
            and od.category= #{category}
        </if>
        <if test="startTime != null and startTime !=''">
            and od.create_time &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime !=''">
            and od.create_time &lt;= #{endTime}
        </if>
        <if test="agentMobile!=null and  agentMobile!=''">
            and ag.linkman_phone like concat('%',#{agentMobile},'%')
        </if>
    </where>
    </select>

    <select id="findRechargeNumByAgentId" resultType="com.cc.oem.modules.agent.entity.AgentAccount">
        select sum(case category when 0 then ifnull(recharge_number,0) else 0 end) emptyBalance,
        	   sum(case category when 1 then ifnull(recharge_number,0) else 0 end) realtimeBalance,
        	   sum(case category when 2 then ifnull(recharge_number,0) else 0 end) internationalBalance,
        	   sum(case category when 4 then ifnull(recharge_number,0) else 0 end) directCommonBalance,
        	   sum(case category when 5 then ifnull(recharge_number,0) else 0 end) lineDirectBalance
        from agent_recharge 
        where status = 1 and agent_id = #{agentId} and pay_type in(2,10)
    </select>
</mapper>
